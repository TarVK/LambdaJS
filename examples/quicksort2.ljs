// Natural number constructors, peano numbers (Zero and Successor) and functions
Z;
S nat;

lessThan Z (S x) = True;
lessThan x Z = False;
lessThan (S x) (S y) = lessThan x y;

// Boolean constructors
False;
True;

iff True x y = x;
iff False x y = y; 

// List constructors (linked list of sorts)
Cons head tail;
Nill;

concat Nill list = list;
concat (Cons head tail) list = Cons head (concat tail list);

// Pair constructor
Pair el1 el2;

// A function to append a value to either the left or right list, given a Pair of lists
appendFirst val (Pair list1 list2) = Pair (Cons val list1) list2;
appendSecond val (Pair list1 list2) = Pair list1 (Cons val list2);  

// Quicksort (except it's not quick at all when compiled)
partition val Nill = Pair Nill Nill;
partition val (Cons head tail) 
    = (iff (lessThan head val) appendFirst appendSecond) head (partition val tail);
    
quicksort Nill = Nill;
quicksort (Cons head tail) = quicksort head (partition head tail);

quicksort val (Pair lessThan moreThan) 
    = concat 
        (quicksort lessThan) 
        (Cons val (quicksort moreThan)); 

output quicksort;

// Example input: exec (Cons (S Z) (Cons (S (S Z)) (Cons Z (Cons (S Z) Nill))))
// Compiled code link: https://tarvk.github.io/LambdaJS/interaction/?constructors=[[%22False%22,0],[%22True%22,0],[%22Undefined%22,0],[%22Cons%22,2],[%22S%22,1],[%22Nill%22,0],[%22Z%22,0],[%22Pair%22,2]]&func=_=%3E($Y=%3E($D0=%3E($D1=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$0(_))(_=%3EFalse=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$1(_))(_=%3ETrue=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$2(_))(_=%3EUndefined=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$8=%3E$9=%3E$5(_)($0)($1))(_=%3ECons=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$8=%3E$5(_)($0))(_=%3ES=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$5(_))(_=%3ENill=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$6(_))(_=%3EZ=%3E$D0(_)(_=%3E$0=%3E$1=%3E$2=%3E$3=%3E$4=%3E$5=%3E$6=%3E$7=%3E$8=%3E$9=%3E$9(_)($0)($1))(_=%3EPair=%3E$D1(_)(_=%3Eiff=%3E$0=%3E$0(_)(_=%3E$1=%3E$2=%3E$2(_))(_=%3E$1=%3E$2=%3E$1(_))(_=%3EUndefined(_))(_=%3E$0$0=%3E$0$1=%3EUndefined(_))(_=%3E$0$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$0$0=%3E$0$1=%3EUndefined(_)))(_=%3Eiff=%3E$D1(_)(_=%3EappendSecond=%3E$0=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EPair(_)(_=%3E$1$0(_))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E$1$1(_))))))(_=%3EappendSecond=%3E$D1(_)(_=%3EappendFirst=%3E$0=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EPair(_)(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E$1$0(_))))(_=%3E$1$1(_))))(_=%3EappendFirst=%3E$D1(_)(_=%3ElessThan=%3E$0=%3E$0(_)(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$0$0=%3E$0$1=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$0$0=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3ElessThan(_)(_=%3E$0$0(_))(_=%3E$1$0(_)))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3ETrue(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3E$0$0=%3E$0$1=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EFalse(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))))(_=%3ElessThan=%3E$D1(_)(_=%3Epartition=%3E$0=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3E(iff(_)(_=%3E(lessThan(_)(_=%3E$1$0(_))(_=%3E$0(_))))(_=%3EappendFirst(_))(_=%3EappendSecond(_)))(_=%3E$1$0(_))(_=%3E(partition(_)(_=%3E$0(_))(_=%3E$1$1(_)))))(_=%3E$1$0=%3EUndefined(_))(_=%3EPair(_)(_=%3ENill(_))(_=%3ENill(_)))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_)))(_=%3Epartition=%3E$D1(_)(_=%3Econcat=%3E$0=%3E$0(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$0$0=%3E$0$1=%3E$1=%3ECons(_)(_=%3E$0$0(_))(_=%3E(concat(_)(_=%3E$0$1(_))(_=%3E$1(_)))))(_=%3E$0$0=%3EUndefined(_))(_=%3E$1=%3E$1(_))(_=%3EUndefined(_))(_=%3E$0$0=%3E$0$1=%3EUndefined(_)))(_=%3Econcat=%3E$D1(_)(_=%3Equicksort=%3E$0=%3E$0(_)(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_))))))))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_))))))))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_))))))))(_=%3E$0$0=%3E$0$1=%3Equicksort(_)(_=%3E$0$0(_))(_=%3E(partition(_)(_=%3E$0$0(_))(_=%3E$0$1(_)))))(_=%3E$0$0=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_))))))))(_=%3ENill(_))(_=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_))))))))(_=%3E$0$0=%3E$0$1=%3E$1=%3E$1(_)(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3EUndefined(_))(_=%3E$1$0=%3EUndefined(_))(_=%3EUndefined(_))(_=%3EUndefined(_))(_=%3E$1$0=%3E$1$1=%3Econcat(_)(_=%3E(quicksort(_)(_=%3E$1$0(_))))(_=%3E(Cons(_)(_=%3E$0(_))(_=%3E(quicksort(_)(_=%3E$1$1(_)))))))))(_=%3Equicksort=%3Equicksort(_)))))))))))))))))(_=%3E$0=%3Ec=%3E(f=%3Ec(_)(f))(_=%3E$Y(_)($0))))(_=%3E$0=%3Ec=%3Ec(_)($0)))(_=%3Ef=%3E(x=%3Ef(_)(_=%3Ex(x)))(x=%3Ef(_)(_=%3Ex(x))))