// Natural number constructors, peano numbers (Zero and Successor) and functions
Z;
S nat;

lessThan Z (S x) = True;
lessThan x Z = False;
lessThan (S x) (S y) = lessThan x y;

// Boolean constructors
False;
True;

iff True x y = x;
iff False x y = y; 

// List constructors (linked list of sorts)
Cons head tail;
Nill;

concat Nill list = list;
concat (Cons head tail) list = Cons head (concat tail list);

// Pair constructor
Pair el1 el2;

// A function to append a value to either the left or right list, given a Pair of lists
appendFirst val (Pair list1 list2) = Pair (Cons val list1) list2;
appendSecond val (Pair list1 list2) = Pair list1 (Cons val list2);  

// Quicksort (except it's not quick at all when compiled)
partition val Nill = Pair Nill Nill;
partition val (Cons head tail) 
    = (iff (lessThan head val) appendFirst appendSecond) head (partition val tail);
    
quicksort Nill = Nill;
quicksort (Cons head tail) = quicksort head (partition head tail);

quicksort val (Pair lessThan moreThan) 
    = concat 
        (quicksort lessThan) 
        (Cons val (quicksort moreThan)); 

output quicksort;